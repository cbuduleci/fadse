// Block definition (there may be more than one block per file)
FUNCTION_BLOCK gap

// Define input variables
VAR_INPUT
    para1 : REAL;
    para2 : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    outpara1 : REAL;
    outpara2 : REAL;
END_VAR

// Fuzzify input variable 'para1'
FUZZIFY para1
    TERM regionMIN20of431 := (4,1) (20,1) (21,0) ; // Interval ]MIN{4}; 20]
    TERM region1118of431 := (11,0) (12,1) (18,1) (19,0) ; // Interval ]11; 18]
    TERM regionMIN8of431 := (4,1) (8,1) (9,0) ; // Interval ]MIN{4}; 8]
END_FUZZIFY

// Defuzzify output variable 'para1'
DEFUZZIFY outpara1
    TERM regionMIN20of431 := (4,1) (20,1) (21,0) ;
    TERM region1118of431 := (11,0) (12,1) (18,1) (19,0) ;
    TERM regionMIN8of431 := (4,1) (8,1) (9,0) ;
    METHOD : COG;
    DEFAULT := -1;
END_DEFUZZIFY

// Fuzzify input variable 'para2'
FUZZIFY para2
    TERM region5MAXof06 := (5,0) (6,1) (6,1) ; // Interval ]5; MAX{6}]
    TERM region3MAXof06 := (3,0) (4,1) (6,1) ; // Interval ]3; MAX{6}]
    TERM regionMIN3of06 := (0,1) (3,1) (4,0) ; // Interval ]MIN{0}; 3]
    TERM region35of06 := (3,0) (4,1) (5,1) (6,0) ; // Interval ]3; 5]
    TERM region710of513 := (7,0) (8,1) (10,1) (11,0) ; // Interval ]7; 10]
    TERM region8MAXof513 := (8,0) (9,1) (13,1) ; // Interval ]8; MAX{13}]
    TERM region11MAXof513 := (11,0) (12,1) (13,1) ; // Interval ]11; MAX{13}]
    TERM region78of513 := (7,0) (8,1) (8,1) (9,0) ; // Interval ]7; 8]
    TERM regionMIN2of07 := (0,1) (2,1) (3,0) ; // Interval ]MIN{0}; 2]
    TERM region01of07 := (0,0) (1,1) (1,1) (2,0) ; // Interval ]0; 1]
    TERM regionMIN1of07 := (0,1) (1,1) (2,0) ; // Interval ]MIN{0}; 1]
    TERM region14of07 := (1,0) (2,1) (4,1) (5,0) ; // Interval ]1; 4]
    TERM regionMIN4of07 := (0,1) (4,1) (5,0) ; // Interval ]MIN{0}; 4]
END_FUZZIFY

// Defuzzify output variable 'para2'
DEFUZZIFY outpara2
    TERM region5MAXof06 := (5,0) (6,1) (6,1) ;
    TERM region3MAXof06 := (3,0) (4,1) (6,1) ;
    TERM regionMIN3of06 := (0,1) (3,1) (4,0) ;
    TERM region35of06 := (3,0) (4,1) (5,1) (6,0) ;
    TERM region710of513 := (7,0) (8,1) (10,1) (11,0) ;
    TERM region8MAXof513 := (8,0) (9,1) (13,1) ;
    TERM region11MAXof513 := (11,0) (12,1) (13,1) ;
    TERM region78of513 := (7,0) (8,1) (8,1) (9,0) ;
    TERM regionMIN2of07 := (0,1) (2,1) (3,0) ;
    TERM region01of07 := (0,0) (1,1) (1,1) (2,0) ;
    TERM regionMIN1of07 := (0,1) (1,1) (2,0) ;
    TERM region14of07 := (1,0) (2,1) (4,1) (5,0) ;
    TERM regionMIN4of07 := (0,1) (4,1) (5,0) ;
    METHOD : COG;
    DEFAULT := -1;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;
    Rule 0 : IF para1 IS regionMIN20of431 AND para2 IS region3MAXof06 THEN outpara2 IS regionMIN4of07;
    Rule 1 : IF para1 IS regionMIN20of431 AND para2 IS region8MAXof513 THEN outpara2 IS regionMIN4of07;
    Rule 2 : IF para1 IS regionMIN20of431 AND para2 IS region5MAXof06 THEN outpara2 IS regionMIN1of07;
    Rule 3 : IF para1 IS regionMIN20of431 AND para2 IS region11MAXof513 THEN outpara2 IS regionMIN1of07;
    Rule 4 : IF para1 IS regionMIN20of431 AND para2 IS region3MAXof06 THEN outpara2 IS region14of07;
    Rule 5 : IF para1 IS regionMIN20of431 AND para2 IS region78of513 THEN outpara2 IS region14of07;
    Rule 6 : IF para1 IS regionMIN8of431 AND para2 IS regionMIN3of06 THEN outpara2 IS region01of07;
    Rule 7 : IF para1 IS regionMIN8of431 AND para2 IS region710of513 THEN outpara2 IS region01of07;
    Rule 8 : IF para1 IS region1118of431 AND para2 IS region35of06 THEN outpara2 IS regionMIN2of07;
    Rule 9 : IF para1 IS region1118of431 AND para2 IS region11MAXof513 THEN outpara2 IS regionMIN2of07;
END_RULEBLOCK
END_FUNCTION_BLOCK