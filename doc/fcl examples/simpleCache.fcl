// Block definition (there may be more than one block per file)
FUNCTION_BLOCK l2size

// Define input variables
VAR_INPUT
    l1size : REAL;
    tech : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    l2size : REAL;
END_VAR


FUZZIFY l1size
    TERM small := (0, 1) (16, 1) (128, 0) ;
    TERM large := (16, 0) (128,1) (256,1);
END_FUZZIFY


FUZZIFY tech
    TERM small := (0, 1) (90, 1) (140,0) ;
    TERM big := (90,0) (140,1) (360,1);
END_FUZZIFY

DEFUZZIFY l2size
    TERM small := (0,1) (128,1) (512,0);
    TERM medium := (128,0) (512,1) (2048,1) (4096,0);
    TERM big := (2048,0) (8192,1);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 15 (if no rule activates defuzzifier)
    DEFAULT := 1024;
END_DEFUZZIFY


RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' MIN ,PROD activation method
    ACT : MIN;
    // Use 'max'  MAX ,SUM accumulation method
    ACCU : MAX;

    RULE 1 : IF l1size IS small AND tech IS big
                THEN l2size IS medium;
    RULE 2 : IF l1size IS small AND tech IS small
                THEN l2size IS big;
    RULE 3 : IF l1size IS large AND tech IS big
                THEN l2size IS medium;
    RULE 4 : IF l1size IS large AND tech IS small
                THEN l2size IS small;

END_RULEBLOCK
END_FUNCTION_BLOCK